<?xml version='1.0' encoding='UTF-8'?>
<glyph name="i" format="2">
  <advance width="240"/>
  <unicode hex="0069"/>
  <anchor x="150" y="725" name="top"/>
  <anchor x="102" y="0" name="bottom"/>
  <outline>
    <contour>
      <point x="76" y="467" type="qcurve" name="ah01"/>
      <point x="77" y="490"/>
      <point x="103" y="520"/>
      <point x="127" y="520" type="qcurve" name="at01"/>
      <point x="151" y="520"/>
      <point x="178" y="490"/>
      <point x="178" y="464" type="qcurve" name="sh01"/>
      <point x="177" y="410"/>
      <point x="172" y="299"/>
      <point x="165" y="190"/>
      <point x="157" y="88"/>
      <point x="153" y="45" type="qcurve" name="sh03"/>
      <point x="150" y="16"/>
      <point x="119" y="-11"/>
      <point x="102" y="-11" type="qcurve" name="ab01"/>
      <point x="83" y="-11"/>
      <point x="52" y="19"/>
      <point x="54" y="52" type="qcurve" name="sh02"/>
      <point x="57" y="110"/>
      <point x="63" y="212"/>
      <point x="69" y="310"/>
      <point x="74" y="411"/>
    </contour>
    <contour>
      <point x="140" y="606" type="qcurve" name="sv01"/>
      <point x="120" y="606"/>
      <point x="92" y="619"/>
      <point x="74" y="638"/>
      <point x="65" y="661"/>
      <point x="65" y="671" type="qcurve" name="ah02"/>
      <point x="65" y="699"/>
      <point x="107" y="747"/>
      <point x="142" y="747" type="qcurve" name="sv02"/>
      <point x="170" y="747"/>
      <point x="207" y="709"/>
      <point x="207" y="677" type="qcurve" name="sh04"/>
      <point x="207" y="649"/>
      <point x="171" y="606"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="ah01" align="round"/&gt;
    &lt;ttc code="alignh" point="ah02" align="round"/&gt;
    &lt;ttc code="mdeltah" point="ah01" delta="-8" ppm1="9" ppm2="10"/&gt;
    &lt;ttc code="singleh" point1="ah01" point2="sh01" stem="X: 100"/&gt;
    &lt;ttc code="singleh" point1="ah01" point2="sh02" align="round"/&gt;
    &lt;ttc code="singleh" point1="sh02" point2="sh03" stem="X: 100"/&gt;
    &lt;ttc code="mdeltah" point="ah02" delta="-8" ppm1="9" ppm2="10"/&gt;
    &lt;ttc code="singleh" point1="ah02" point2="sh04" round="true"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 0"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 0"/&gt;
    &lt;ttc code="singlev" point1="at01" point2="sv01" round="true"/&gt;
    &lt;ttc code="singlev" point1="sv01" point2="sv02" round="true"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHB[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 6 values pushed */
16 0 1 0 0 1
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 2
MIRP[10100]	/* MoveIndirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
11 2
MIRP[10100]	/* MoveIndirectRelPt */
PUSHB[ ]	/* 6 values pushed */
16 27 1 0 27 1
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
27
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
33
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHB[ ]	/* 3 values pushed */
3 7 0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHB[ ]	/* 1 value pushed */
  1
  ADD[ ]	/* Add */
  RCVT[ ]	/* ReadCVT */
  SWAP[ ]	/* SwapTopStack */
  DUP[ ]	/* DuplicateTopStack */
  DUP[ ]	/* DuplicateTopStack */
  SRP0[ ]	/* SetRefPoint0 */
  ROLL[ ]	/* RollTopThreeStack */
  MSIRP[0]	/* MoveStackIndirRelPt */
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  SWAP[ ]	/* SwapTopStack */
  DUP[ ]	/* DuplicateTopStack */
  SRP2[ ]	/* SetRefPoint2 */
  SWAP[ ]	/* SwapTopStack */
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
14 3 0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHB[ ]	/* 1 value pushed */
  1
  ADD[ ]	/* Add */
  RCVT[ ]	/* ReadCVT */
  SWAP[ ]	/* SwapTopStack */
  DUP[ ]	/* DuplicateTopStack */
  DUP[ ]	/* DuplicateTopStack */
  SRP0[ ]	/* SetRefPoint0 */
  ROLL[ ]	/* RollTopThreeStack */
  MSIRP[0]	/* MoveStackIndirRelPt */
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  SWAP[ ]	/* SwapTopStack */
  DUP[ ]	/* DuplicateTopStack */
  SRP2[ ]	/* SetRefPoint2 */
  SWAP[ ]	/* SwapTopStack */
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22
MDRP[11100]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
30
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>0e3ab61054b457705613a9a96ea0e1771a47791793e07f83dd1db9ad3fe4680ddfcb8cbc81a47b7dbd282ec9ec121563abbcc6992429d172cace554dfcf06282</string>
      </dict>
    </dict>
  </lib>
</glyph>
