<?xml version='1.0' encoding='UTF-8'?>
<glyph name="I" format="2">
  <advance width="297"/>
  <unicode hex="0049"/>
  <anchor x="159" y="690" name="top"/>
  <anchor x="131" y="0" name="bottom"/>
  <outline>
    <contour>
      <point x="109" y="673" type="qcurve" name="sh01"/>
      <point x="110" y="693"/>
      <point x="136" y="722"/>
      <point x="160" y="722" type="qcurve" name="at01"/>
      <point x="180" y="722"/>
      <point x="210" y="692"/>
      <point x="209" y="667" type="qcurve" name="sh02"/>
      <point x="206" y="586"/>
      <point x="202" y="509" type="qcurve"/>
      <point x="195" y="356" type="line"/>
      <point x="192" y="280"/>
      <point x="185" y="125"/>
      <point x="183" y="41" type="qcurve" name="sh03"/>
      <point x="182" y="12"/>
      <point x="153" y="-17"/>
      <point x="132" y="-17" type="qcurve" name="ab01"/>
      <point x="113" y="-17"/>
      <point x="86" y="12"/>
      <point x="86" y="41" type="qcurve" name="ah01"/>
      <point x="85" y="124"/>
      <point x="89" y="281"/>
      <point x="96" y="435"/>
      <point x="104" y="591"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="ah01" align="round"/&gt;
    &lt;ttc code="singleh" point1="ah01" point2="sh01" align="round"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02" stem="X: 100"/&gt;
    &lt;ttc code="singleh" point1="ah01" point2="sh03" stem="X: 100"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 0"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHB[ ]	/* 1 value pushed */
18
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
6 2
MIRP[10100]	/* MoveIndirectRelPt */
PUSHB[ ]	/* 1 value pushed */
18
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 2
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHB[ ]	/* 3 values pushed */
3 9 0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHB[ ]	/* 1 value pushed */
  1
  ADD[ ]	/* Add */
  RCVT[ ]	/* ReadCVT */
  SWAP[ ]	/* SwapTopStack */
  DUP[ ]	/* DuplicateTopStack */
  DUP[ ]	/* DuplicateTopStack */
  SRP0[ ]	/* SetRefPoint0 */
  ROLL[ ]	/* RollTopThreeStack */
  MSIRP[0]	/* MoveStackIndirRelPt */
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  SWAP[ ]	/* SwapTopStack */
  DUP[ ]	/* DuplicateTopStack */
  SRP2[ ]	/* SetRefPoint2 */
  SWAP[ ]	/* SwapTopStack */
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 3 0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHB[ ]	/* 1 value pushed */
  1
  ADD[ ]	/* Add */
  RCVT[ ]	/* ReadCVT */
  SWAP[ ]	/* SwapTopStack */
  DUP[ ]	/* DuplicateTopStack */
  DUP[ ]	/* DuplicateTopStack */
  SRP0[ ]	/* SetRefPoint0 */
  ROLL[ ]	/* RollTopThreeStack */
  MSIRP[0]	/* MoveStackIndirRelPt */
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  SWAP[ ]	/* SwapTopStack */
  DUP[ ]	/* DuplicateTopStack */
  SRP2[ ]	/* SetRefPoint2 */
  SWAP[ ]	/* SwapTopStack */
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>4a6b763300ed4dc6c07b88613a3d09d30c3100d4d22563e1d1652d6e8c64a32c8db400a20b693471f77858a3e1fb2ea82a4f07b18aeee85bd4c9901f9fbc5624</string>
      </dict>
    </dict>
  </lib>
</glyph>
