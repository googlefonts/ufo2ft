<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>com.fontlab.v2.tth</key>
    <dict>
      <key>stems</key>
      <dict>
        <key>X: 100</key>
        <dict>
          <key>horizontal</key>
          <false/>
          <key>round</key>
          <dict>
            <key>0</key>
            <integer>1</integer>
            <key>16</key>
            <integer>2</integer>
            <key>27</key>
            <integer>3</integer>
            <key>35</key>
            <integer>4</integer>
            <key>45</key>
            <integer>5</integer>
            <key>55</key>
            <integer>6</integer>
          </dict>
          <key>width</key>
          <integer>100</integer>
        </dict>
        <key>Y: 100</key>
        <dict>
          <key>horizontal</key>
          <true/>
          <key>round</key>
          <dict>
            <key>0</key>
            <integer>1</integer>
            <key>16</key>
            <integer>2</integer>
            <key>27</key>
            <integer>3</integer>
            <key>35</key>
            <integer>4</integer>
            <key>45</key>
            <integer>5</integer>
            <key>55</key>
            <integer>6</integer>
          </dict>
          <key>width</key>
          <integer>100</integer>
        </dict>
      </dict>
      <key>zones</key>
      <dict>
        <key>b: 0</key>
        <dict>
          <key>position</key>
          <integer>6</integer>
          <key>top</key>
          <false/>
          <key>width</key>
          <integer>51</integer>
        </dict>
        <key>b: 1</key>
        <dict>
          <key>position</key>
          <integer>-406</integer>
          <key>top</key>
          <false/>
          <key>width</key>
          <integer>39</integer>
        </dict>
        <key>t: 0</key>
        <dict>
          <key>position</key>
          <integer>494</integer>
          <key>top</key>
          <true/>
          <key>width</key>
          <integer>29</integer>
        </dict>
        <key>t: 1</key>
        <dict>
          <key>position</key>
          <integer>721</integer>
          <key>top</key>
          <true/>
          <key>width</key>
          <integer>28</integer>
        </dict>
        <key>t: 2</key>
        <dict>
          <key>position</key>
          <integer>767</integer>
          <key>top</key>
          <true/>
          <key>width</key>
          <integer>23</integer>
        </dict>
      </dict>
    </dict>
    <key>public.glyphOrder</key>
    <array>
      <string>.notdef</string>
      <string>A</string>
      <string>E</string>
      <string>I</string>
      <string>O</string>
      <string>U</string>
      <string>a</string>
      <string>e</string>
      <string>i</string>
      <string>o</string>
      <string>u</string>
      <string>adieresis</string>
      <string>edieresis</string>
      <string>odieresis</string>
      <string>udieresis</string>
      <string>uni0308</string>
      <string>a.005</string>
      <string>NULL</string>
      <string>CR</string>
      <string>space</string>
    </array>
    <key>public.truetype.instructions</key>
    <dict>
      <key>controlValue</key>
      <array>
        <dict>
          <key>id</key>
          <integer>0</integer>
          <key>value</key>
          <integer>21</integer>
        </dict>
        <dict>
          <key>id</key>
          <integer>1</integer>
          <key>value</key>
          <integer>100</integer>
        </dict>
        <dict>
          <key>id</key>
          <integer>2</integer>
          <key>value</key>
          <integer>100</integer>
        </dict>
        <dict>
          <key>id</key>
          <integer>3</integer>
          <key>value</key>
          <integer>6</integer>
        </dict>
        <dict>
          <key>id</key>
          <integer>4</integer>
          <key>value</key>
          <integer>51</integer>
        </dict>
        <dict>
          <key>id</key>
          <integer>5</integer>
          <key>value</key>
          <integer>-406</integer>
        </dict>
        <dict>
          <key>id</key>
          <integer>6</integer>
          <key>value</key>
          <integer>39</integer>
        </dict>
        <dict>
          <key>id</key>
          <integer>7</integer>
          <key>value</key>
          <integer>494</integer>
        </dict>
        <dict>
          <key>id</key>
          <integer>8</integer>
          <key>value</key>
          <integer>29</integer>
        </dict>
        <dict>
          <key>id</key>
          <integer>9</integer>
          <key>value</key>
          <integer>721</integer>
        </dict>
        <dict>
          <key>id</key>
          <integer>10</integer>
          <key>value</key>
          <integer>28</integer>
        </dict>
        <dict>
          <key>id</key>
          <integer>11</integer>
          <key>value</key>
          <integer>767</integer>
        </dict>
        <dict>
          <key>id</key>
          <integer>12</integer>
          <key>value</key>
          <integer>23</integer>
        </dict>
      </array>
      <key>controlValueProgram</key>
      <string>
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
  PUSHB[ ]	/* 2 values pushed */
  1 1
  INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
68
PUSHB[ ]	/* 2 values pushed */
9 3
SDS[ ]	/* SetDeltaShiftInGState */
SDB[ ]	/* SetDeltaBaseInGState */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHB[ ]	/* 3 values pushed */
1 1 1
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFPVectorToAxis */
PUSHB[ ]	/* 3 values pushed */
2 1 1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 8 values pushed */
2 55 45 35 27 16 0 6
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHB[ ]	/* 8 values pushed */
1 55 45 35 27 16 0 6
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
3 5 5
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
RDTG[ ]	/* RoundDownToGrid */
ROUND[01]	/* Round */
RTG[ ]	/* RoundToGrid */
WCVTP[ ]	/* WriteCVTInPixels */
</string>
      <key>fontProgram</key>
      <string>
PUSHB[ ]	/* 8 values pushed */
7 6 5 4 3 2 1 0
FDEF[ ]	/* FunctionDefinition */
  DUP[ ]	/* DuplicateTopStack */
  DUP[ ]	/* DuplicateTopStack */
  RCVT[ ]	/* ReadCVT */
  ROUND[01]	/* Round */
  WCVTP[ ]	/* WriteCVTInPixels */
  PUSHB[ ]	/* 1 value pushed */
  1
  ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
FDEF[ ]	/* FunctionDefinition */
  PUSHB[ ]	/* 1 value pushed */
  0
  LOOPCALL[ ]	/* LoopAndCallFunction */
  POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
FDEF[ ]	/* FunctionDefinition */
  DUP[ ]	/* DuplicateTopStack */
  GC[0]	/* GetCoordOnPVector */
  PUSHB[ ]	/* 1 value pushed */
  3
  CINDEX[ ]	/* CopyXToTopStack */
  GC[0]	/* GetCoordOnPVector */
  GT[ ]	/* GreaterThan */
  IF[ ]	/* If */
    SWAP[ ]	/* SwapTopStack */
  EIF[ ]	/* EndIf */
  DUP[ ]	/* DuplicateTopStack */
  ROLL[ ]	/* RollTopThreeStack */
  DUP[ ]	/* DuplicateTopStack */
  ROLL[ ]	/* RollTopThreeStack */
  MD[0]	/* MeasureDistance */
  ABS[ ]	/* Absolute */
  ROLL[ ]	/* RollTopThreeStack */
  DUP[ ]	/* DuplicateTopStack */
  GC[0]	/* GetCoordOnPVector */
  DUP[ ]	/* DuplicateTopStack */
  ROUND[00]	/* Round */
  SUB[ ]	/* Subtract */
  ABS[ ]	/* Absolute */
  PUSHB[ ]	/* 1 value pushed */
  4
  CINDEX[ ]	/* CopyXToTopStack */
  GC[0]	/* GetCoordOnPVector */
  DUP[ ]	/* DuplicateTopStack */
  ROUND[00]	/* Round */
  SUB[ ]	/* Subtract */
  ABS[ ]	/* Absolute */
  GT[ ]	/* GreaterThan */
  IF[ ]	/* If */
    SWAP[ ]	/* SwapTopStack */
    NEG[ ]	/* Negate */
    ROLL[ ]	/* RollTopThreeStack */
  EIF[ ]	/* EndIf */
  MDAP[1]	/* MoveDirectAbsPt */
  DUP[ ]	/* DuplicateTopStack */
  PUSHB[ ]	/* 1 value pushed */
  0
  GTEQ[ ]	/* GreaterThanOrEqual */
  IF[ ]	/* If */
    ROUND[01]	/* Round */
    DUP[ ]	/* DuplicateTopStack */
    PUSHB[ ]	/* 1 value pushed */
    0
    EQ[ ]	/* Equal */
    IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
    EIF[ ]	/* EndIf */
  ELSE[ ]	/* Else */
    ROUND[01]	/* Round */
    DUP[ ]	/* DuplicateTopStack */
    PUSHB[ ]	/* 1 value pushed */
    0
    EQ[ ]	/* Equal */
    IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      NEG[ ]	/* Negate */
    EIF[ ]	/* EndIf */
  EIF[ ]	/* EndIf */
  MSIRP[0]	/* MoveStackIndirRelPt */
ENDF[ ]	/* EndFunctionDefinition */
FDEF[ ]	/* FunctionDefinition */
  DUP[ ]	/* DuplicateTopStack */
  GC[0]	/* GetCoordOnPVector */
  PUSHB[ ]	/* 1 value pushed */
  4
  CINDEX[ ]	/* CopyXToTopStack */
  GC[0]	/* GetCoordOnPVector */
  GT[ ]	/* GreaterThan */
  IF[ ]	/* If */
    SWAP[ ]	/* SwapTopStack */
    ROLL[ ]	/* RollTopThreeStack */
  EIF[ ]	/* EndIf */
  DUP[ ]	/* DuplicateTopStack */
  GC[0]	/* GetCoordOnPVector */
  DUP[ ]	/* DuplicateTopStack */
  ROUND[10]	/* Round */
  SUB[ ]	/* Subtract */
  ABS[ ]	/* Absolute */
  PUSHB[ ]	/* 1 value pushed */
  4
  CINDEX[ ]	/* CopyXToTopStack */
  GC[0]	/* GetCoordOnPVector */
  DUP[ ]	/* DuplicateTopStack */
  ROUND[10]	/* Round */
  SUB[ ]	/* Subtract */
  ABS[ ]	/* Absolute */
  GT[ ]	/* GreaterThan */
  IF[ ]	/* If */
    SWAP[ ]	/* SwapTopStack */
    ROLL[ ]	/* RollTopThreeStack */
  EIF[ ]	/* EndIf */
  MDAP[1]	/* MoveDirectAbsPt */
  MIRP[11101]	/* MoveIndirectRelPt */
ENDF[ ]	/* EndFunctionDefinition */
FDEF[ ]	/* FunctionDefinition */
  DUP[ ]	/* DuplicateTopStack */
  DUP[ ]	/* DuplicateTopStack */
  RCVT[ ]	/* ReadCVT */
  SWAP[ ]	/* SwapTopStack */
  DUP[ ]	/* DuplicateTopStack */
  DUP[ ]	/* DuplicateTopStack */
  RCVT[ ]	/* ReadCVT */
  ROUND[01]	/* Round */
  DUP[ ]	/* DuplicateTopStack */
  ROLL[ ]	/* RollTopThreeStack */
  SWAP[ ]	/* SwapTopStack */
  WCVTP[ ]	/* WriteCVTInPixels */
  ROLL[ ]	/* RollTopThreeStack */
  SUB[ ]	/* Subtract */
  SWAP[ ]	/* SwapTopStack */
  PUSHB[ ]	/* 1 value pushed */
  1
  ADD[ ]	/* Add */
  SWAP[ ]	/* SwapTopStack */
  WCVTP[ ]	/* WriteCVTInPixels */
  PUSHB[ ]	/* 1 value pushed */
  2
  ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
FDEF[ ]	/* FunctionDefinition */
  PUSHB[ ]	/* 1 value pushed */
  4
  LOOPCALL[ ]	/* LoopAndCallFunction */
  POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
FDEF[ ]	/* FunctionDefinition */
  MPPEM[ ]	/* MeasurePixelPerEm */
  DUP[ ]	/* DuplicateTopStack */
  PUSHB[ ]	/* 1 value pushed */
  3
  MINDEX[ ]	/* MoveXToTopStack */
  GTEQ[ ]	/* GreaterThanOrEqual */
  IF[ ]	/* If */
    PUSHB[ ]	/* 1 value pushed */
    64
  ELSE[ ]	/* Else */
    PUSHB[ ]	/* 1 value pushed */
    0
  EIF[ ]	/* EndIf */
  ROLL[ ]	/* RollTopThreeStack */
  ROLL[ ]	/* RollTopThreeStack */
  DUP[ ]	/* DuplicateTopStack */
  PUSHB[ ]	/* 1 value pushed */
  3
  MINDEX[ ]	/* MoveXToTopStack */
  GTEQ[ ]	/* GreaterThanOrEqual */
  IF[ ]	/* If */
    SWAP[ ]	/* SwapTopStack */
    POP[ ]	/* PopTopStack */
    PUSHB[ ]	/* 1 value pushed */
    128
    ROLL[ ]	/* RollTopThreeStack */
    ROLL[ ]	/* RollTopThreeStack */
  ELSE[ ]	/* Else */
    ROLL[ ]	/* RollTopThreeStack */
    SWAP[ ]	/* SwapTopStack */
  EIF[ ]	/* EndIf */
  DUP[ ]	/* DuplicateTopStack */
  PUSHB[ ]	/* 1 value pushed */
  3
  MINDEX[ ]	/* MoveXToTopStack */
  GTEQ[ ]	/* GreaterThanOrEqual */
  IF[ ]	/* If */
    SWAP[ ]	/* SwapTopStack */
    POP[ ]	/* PopTopStack */
    PUSHB[ ]	/* 1 value pushed */
    192
    ROLL[ ]	/* RollTopThreeStack */
    ROLL[ ]	/* RollTopThreeStack */
  ELSE[ ]	/* Else */
    ROLL[ ]	/* RollTopThreeStack */
    SWAP[ ]	/* SwapTopStack */
  EIF[ ]	/* EndIf */
  DUP[ ]	/* DuplicateTopStack */
  PUSHB[ ]	/* 1 value pushed */
  3
  MINDEX[ ]	/* MoveXToTopStack */
  GTEQ[ ]	/* GreaterThanOrEqual */
  IF[ ]	/* If */
    SWAP[ ]	/* SwapTopStack */
    POP[ ]	/* PopTopStack */
    PUSHW[ ]	/* 1 value pushed */
    256
    ROLL[ ]	/* RollTopThreeStack */
    ROLL[ ]	/* RollTopThreeStack */
  ELSE[ ]	/* Else */
    ROLL[ ]	/* RollTopThreeStack */
    SWAP[ ]	/* SwapTopStack */
  EIF[ ]	/* EndIf */
  DUP[ ]	/* DuplicateTopStack */
  PUSHB[ ]	/* 1 value pushed */
  3
  MINDEX[ ]	/* MoveXToTopStack */
  GTEQ[ ]	/* GreaterThanOrEqual */
  IF[ ]	/* If */
    SWAP[ ]	/* SwapTopStack */
    POP[ ]	/* PopTopStack */
    PUSHW[ ]	/* 1 value pushed */
    320
    ROLL[ ]	/* RollTopThreeStack */
    ROLL[ ]	/* RollTopThreeStack */
  ELSE[ ]	/* Else */
    ROLL[ ]	/* RollTopThreeStack */
    SWAP[ ]	/* SwapTopStack */
  EIF[ ]	/* EndIf */
  DUP[ ]	/* DuplicateTopStack */
  PUSHB[ ]	/* 1 value pushed */
  3
  MINDEX[ ]	/* MoveXToTopStack */
  GTEQ[ ]	/* GreaterThanOrEqual */
  IF[ ]	/* If */
    PUSHB[ ]	/* 1 value pushed */
    3
    CINDEX[ ]	/* CopyXToTopStack */
    RCVT[ ]	/* ReadCVT */
    PUSHW[ ]	/* 1 value pushed */
    384
    LT[ ]	/* LessThan */
    IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSHW[ ]	/* 1 value pushed */
      384
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
    ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
    EIF[ ]	/* EndIf */
  ELSE[ ]	/* Else */
    POP[ ]	/* PopTopStack */
  EIF[ ]	/* EndIf */
  WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
FDEF[ ]	/* FunctionDefinition */
  PUSHB[ ]	/* 1 value pushed */
  0
  RCVT[ ]	/* ReadCVT */
  IF[ ]	/* If */
    PUSHB[ ]	/* 1 value pushed */
    1
    ADD[ ]	/* Add */
    RCVT[ ]	/* ReadCVT */
    SWAP[ ]	/* SwapTopStack */
    DUP[ ]	/* DuplicateTopStack */
    DUP[ ]	/* DuplicateTopStack */
    SRP0[ ]	/* SetRefPoint0 */
    ROLL[ ]	/* RollTopThreeStack */
    MSIRP[0]	/* MoveStackIndirRelPt */
    MDAP[1]	/* MoveDirectAbsPt */
  ELSE[ ]	/* Else */
    SWAP[ ]	/* SwapTopStack */
    DUP[ ]	/* DuplicateTopStack */
    SRP2[ ]	/* SetRefPoint2 */
    SWAP[ ]	/* SwapTopStack */
    MIAP[0]	/* MoveIndirectAbsPt */
  EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
</string>
      <key>formatVersion</key>
      <string>1</string>
      <key>maxFunctionDefs</key>
      <integer>8</integer>
      <key>maxInstructionDefs</key>
      <integer>0</integer>
      <key>maxStackElements</key>
      <integer>1024</integer>
      <key>maxStorage</key>
      <integer>0</integer>
      <key>maxTwilightPoints</key>
      <integer>0</integer>
      <key>maxZones</key>
      <integer>1</integer>
    </dict>
  </dict>
</plist>
